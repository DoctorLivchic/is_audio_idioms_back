Index: lingua_idiom/src/components/FavoritesBody.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { Component } from \"react\";\r\nimport { useAuth } from \"../hoc/useAuth\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport User from \"../img/User.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport profileDiv from \"../img/profileDiv.png\";\r\nimport { Table, notification, Button, Form, Input, Select, Modal } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\nimport { supabase } from \"../supabase/supabaseClient\";\r\n\r\nfunction FavoritesBody() {\r\n  const navigate = useNavigate();\r\n  const { signout } = useAuth();\r\n  const [phraseIds, setPhraseIds] = useState([]);\r\n  const [phrase_text, setrequest] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [form] = useForm();\r\n  const [tag, settag] = useState([]);\r\n  const [sel_tag, setsel_tag] = useState([]);\r\n  const columns = [\r\n    {\r\n      title: \"Номер фразы\",\r\n      dataIndex: \"phrase_id\",\r\n      key: \"phrase_id\",\r\n    },\r\n    {\r\n      title: \"Язык перевода\",\r\n      dataIndex: \"language_id\",\r\n      key: \"language_id\",\r\n    },\r\n    {\r\n      title: \"Текст фразеологизма\",\r\n      dataIndex: \"phrase_text_text\",\r\n      key: \"phrase_text_text\",\r\n    },\r\n    {\r\n      title: \"Транскрипция\",\r\n      dataIndex: \"phrase_text_transcription\",\r\n      key: \"phrase_text_transcription\",\r\n    },\r\n    {\r\n      title: \"Описание фразеологизма\",\r\n      dataIndex: \"phrase_text_desc\",\r\n      key: \"phrase_text_desc\",\r\n    },\r\n  ];\r\n\r\n  const GridDataOption = {\r\n    rowCount: 10,\r\n    page: 1,\r\n    orderBy: \"phrase_text_id\",\r\n    from: \"phrase_text\",\r\n  };\r\n\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    console.log(\"selectedRowKeys changed: \", newSelectedRowKeys);\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: onSelectChange,\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   getphrase().then(() => setLoading(false));\r\n  // }, [loading]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserIds = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"favourites_phraseological\")\r\n        .select(\"phrase_id, language_id\")\r\n        .eq(\"user_id\", localStorage.getItem(\"userID\"))\r\n\r\n      if (error) console.log(\"Error fetching user IDs:\", error.message);\r\n      else {\r\n        setPhraseIds(data.map((phr_id) => phr_id.phrase_id));\r\n      }\r\n    };\r\n\r\n    fetchUserIds();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"phrase_text\")\r\n        .select(\r\n          \"phrase_text_text, phrase_text_transcription, phrase_text_desc, phrase_id \"\r\n        )\r\n        .in(\"phrase_id\", phraseIds);\r\n\r\n      console.log(data);\r\n    };\r\n\r\n    if (phraseIds.length > 0) fetchOrders();\r\n  }, [phraseIds]);\r\n  // async function getphrase() {\r\n  //   try {\r\n  //     const phraseId = await supabase\r\n  //       .from(\"favourites_phraseological\")\r\n  //       .select(\"phrase_id\")\r\n  //       .eq(\"user_id\", localStorage.getItem(\"userID\"));\r\n\r\n  //     const arr = [];\r\n  //     for (let i = 0; i < phraseId.length; i++) {\r\n  //       arr[i] = phraseId[i][\"phrase_id\"];\r\n  //     }\r\n\r\n  //     const phrase = await supabase\r\n  //       .from(\"phrase_text\")\r\n  //       .select(\r\n  //         \"phrase_text_text, phrase_text_transcription, phrase_text_desc, phrase_id \"\r\n  //       )\r\n  //       .in(\"phrase_id\", arr);\r\n\r\n  //     console.log(phraseId);\r\n  //     console.log(arr);\r\n  //   } catch (error) {\r\n  //     console.log(error.message);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"FavoritesBody\">\r\n      <Table\r\n        loading={loading}\r\n        dataSource={phrase_text}\r\n        columns={columns}\r\n        rowSelection={rowSelection}\r\n        rowKey={(record) => record.phrase_text_id}\r\n        onRow={(record) => ({\r\n          onClick: () => {},\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoritesBody;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lingua_idiom/src/components/FavoritesBody.js b/lingua_idiom/src/components/FavoritesBody.js
--- a/lingua_idiom/src/components/FavoritesBody.js	(revision e3ee975d7813f19f72b1c116bbc267a4f14fb40a)
+++ b/lingua_idiom/src/components/FavoritesBody.js	(date 1685795913217)
@@ -51,7 +51,7 @@
   const GridDataOption = {
     rowCount: 10,
     page: 1,
-    orderBy: "phrase_text_id",
+    orderBy: "phrase_id",
     from: "phrase_text",
   };
 
@@ -65,9 +65,9 @@
     onChange: onSelectChange,
   };
 
-  // useEffect(() => {
-  //   getphrase().then(() => setLoading(false));
-  // }, [loading]);
+   useEffect(() => {
+    //  getphrase().then(() => setLoading(false));
+   }, [loading]);
 
   useEffect(() => {
     const fetchUserIds = async () => {
@@ -81,7 +81,6 @@
         setPhraseIds(data.map((phr_id) => phr_id.phrase_id));
       }
     };
-
     fetchUserIds();
   }, []);
 
@@ -93,8 +92,7 @@
           "phrase_text_text, phrase_text_transcription, phrase_text_desc, phrase_id "
         )
         .in("phrase_id", phraseIds);
-
-      console.log(data);
+        
     };
 
     if (phraseIds.length > 0) fetchOrders();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ceed9a00-f6bf-4ed2-a737-db381e5b625d\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/sonarlint/issuestore/1/e/1eed80295d1c860445a8af35a3ce0a2dfd5a16b6\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/sonarlint/issuestore/4/4/44fe4354c5d4b5f119db6932bb46d3c1b08f5f29\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/lingua_idiom/src/Main.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/lingua_idiom/src/Main.css\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Q0pJtB6t6VMXa8FXaqt7pDrMpX\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/user/IdeaProjects/new_project/is_audio_idioms_front&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ceed9a00-f6bf-4ed2-a737-db381e5b625d\" name=\"Changes\" comment=\"\" />\r\n      <created>1684500284382</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1684500284382</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e3ee975d7813f19f72b1c116bbc267a4f14fb40a)
+++ b/.idea/workspace.xml	(date 1685796344063)
@@ -5,10 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="ceed9a00-f6bf-4ed2-a737-db381e5b625d" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/1/e/1eed80295d1c860445a8af35a3ce0a2dfd5a16b6" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/4/4/44fe4354c5d4b5f119db6932bb46d3c1b08f5f29" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/lingua_idiom/src/Main.css" beforeDir="false" afterPath="$PROJECT_DIR$/lingua_idiom/src/Main.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lingua_idiom/src/components/FavoritesBody.js" beforeDir="false" afterPath="$PROJECT_DIR$/lingua_idiom/src/components/FavoritesBody.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
